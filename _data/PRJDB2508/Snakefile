from os.path import expanduser, isfile

N_THREADS = 8

def get_sample_ids(fname):
    ret = []
    with open(fname, 'r') as fhandle:
        for line in fhandle:
            ret.append(line.strip("\n"))
    return ret

META = 'metadata/SRR_Acc_List.txt'
HOME = expanduser("~")

SRA_PAIRED = []
if isfile(META):
    SRA_PAIRED = get_sample_ids(META)

ANNO_PRE = "annotation/Arabidopsis_thaliana.TAIR10.28.cdna.all"
ANNO_FA = ANNO_PRE + ".fa.gz"
KAL_IDX = ANNO_PRE + ".kidx"

rule all:
    input:
        META,
        expand('results/paired/{id}/kallisto/abundance.h5', id = SRA_PAIRED)

rule get_transcriptome:
    output: ANNO_FA
    shell:
        'wget -O {ANNO_FA} http://bio.math.berkeley.edu/kallisto/transcriptomes/Arabidopsis_thaliana.TAIR10.28.cdna.all.fa.gz'

rule kallisto_index:
    input: ANNO_FA
    output: KAL_IDX
    threads: 1
    shell:
        'kallisto index -k 31 -i {KAL_IDX} ' + ANNO_FA

rule fastq_dump_paired:
    output:
        'data/paired/{id}',
        'data/paired/{id}/{id}_1.fastq.gz',
        'data/paired/{id}/{id}_2.fastq.gz'
    benchmark:
        'benchmarks/{id}/fastq_dump.json'
    threads: 1
    shell:
        'fastq-dump '
        '--split-files '
        '-O {output[0]} '
        '--gzip '
        '{wildcards.id}'

rule kallisto_paired:
    input:
        'data/paired/{id}/{id}_1.fastq.gz',
        'data/paired/{id}/{id}_2.fastq.gz',
        KAL_IDX
    output:
        'results/paired/{id}/kallisto',
        'results/paired/{id}/kallisto/abundance.h5'
    threads: 1
    shell:
        'kallisto quant '
        '-i {KAL_IDX} '
        '-b 100 '
        '-t 8 '
        '-o {output[0]} '
        '{input[0]} {input[1]}'
